from FireTCP import TCPResponse, TCPRequest, TCPService
from FireTCP.servers import TCPLite


fn kth_fibonacci(k: Int) raises -> Int:
    if k < 0:
        let message = "invalid input to the kth_fib() function: '" + str(k) + "'"
        raise Error(message)
    if k <= 1:
        return k
    return kth_fibonacci(k - 1) + kth_fibonacci(k - 2)


@value
struct kthFib(TCPService):
    fn func(self, req: TCPRequest) raises -> TCPResponse:
        try:
            let k: Int = atol(req.body())
            let result: Int = kth_fibonacci(k=k)
            return TCPResponse(body=str(result))
        except Error:
            return TCPResponse(
                body="Error while trying to compute the '"
                + req.body()
                + "'th fibonacci number: "
                + str(Error),
            )


fn main() raises -> None:
    let fib_service = kthFib()

    var lite_server = TCPLite[kthFib](
        service=fib_service,
        port=9090,
        host_addr="127.0.0.1",
    )

    lite_server.serve()
