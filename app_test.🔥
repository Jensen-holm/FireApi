from FireApi import TCPService, Request, Response
from FireApi.servers import TCPServer


fn kth_fibonacci(k: Int) raises -> Int:
    if k <= 0:
        let message = "invalid input to the kth_fib() function: '" + str(k) + "'"
        raise Error(message)
    if k == 1 or k == 2:
        return k - 1
    return kth_fibonacci(k - 1) + kth_fibonacci(k - 2)


@value
struct kthFib(TCPService):
    fn func(self, req: Request) raises -> Response:
        try:
            let k: Int = atol(req.body())
            let result: Int = kth_fibonacci(k=k)
            return Response.success(
                body=str(result),
            )

        except Error:
            return Response.error(
                status_code=400,
                body="error while attempting to convert "
                + "request body into string: '"
                + str(Error)
                + "'",
            )


fn main() raises -> None:
    let fib_service = kthFib()

    var lite_server = TCPServer[kthFib](
        service=fib_service,
        port=9090,
        host_addr="127.0.0.1",
    )

    lite_server.run()
